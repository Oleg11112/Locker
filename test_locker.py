#!/usr/bin/env python3
# –¢–µ—Å—Ç–æ–≤–∞ –≤–µ—Ä—Å—ñ—è –ø—Ä–æ–≥—Ä–∞–º–∏ (–±–µ–∑ –ø–æ–≤–Ω–æ–µ–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É)

import customtkinter as ctk
import os
import time
from tkinter import messagebox
# import keyboard  # –ó–∞–∫–æ–º–µ–Ω—Ç–æ–≤–∞–Ω–æ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
# import win32gui  # –ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ Linux
# import win32con
# import win32com.client
import sys

# –ü–∞—Ä–æ–ª—ñ
PASSWORD = "14707"
BACKUP_PASSWORD = "unlockmepls"

# –¢–µ–º–∏ —Ç–∞ –∫–æ–ª—å–æ—Ä–∏
ctk.set_appearance_mode("dark")
ctk.set_default_color_theme("blue")

# –ö–æ–ª—å–æ—Ä–æ–≤–∞ –ø–∞–ª—ñ—Ç—Ä–∞
COLORS = {
    "bg_primary": "#0d1117",
    "bg_secondary": "#161b22", 
    "bg_tertiary": "#21262d",
    "accent": "#238636",
    "accent_hover": "#2ea043",
    "text_primary": "#f0f6fc",
    "text_secondary": "#8b949e",
    "error": "#f85149",
    "warning": "#d29922"
}

# –¢–µ—Å—Ç–æ–≤–µ –≤—ñ–∫–Ω–æ
root = ctk.CTk()
root.geometry("900x700+100+100")  # –§—ñ–∫—Å–æ–≤–∞–Ω–∏–π —Ä–æ–∑–º—ñ—Ä –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
root.configure(fg_color=COLORS["bg_primary"])
root.title("System Test")

# –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑ —Ç—ñ–Ω–Ω—é
main_frame = ctk.CTkFrame(
    master=root, 
    fg_color=COLORS["bg_primary"],
    corner_radius=0
)
main_frame.pack(fill="both", expand=True)

# –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞ –ø–∞–Ω–µ–ª—å –∑ –∑–∞–æ–∫—Ä—É–≥–ª–µ–Ω–∏–º–∏ –∫—É—Ç–∞–º–∏ —Ç–∞ —Ç—ñ–Ω–Ω—é
content_frame = ctk.CTkFrame(
    master=main_frame, 
    fg_color=COLORS["bg_secondary"],
    corner_radius=20,
    border_width=2,
    border_color=COLORS["bg_tertiary"]
)
content_frame.place(relx=0.5, rely=0.5, anchor="center")

# –Ü–∫–æ–Ω–∫–∞ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
lock_icon = ctk.CTkLabel(
    content_frame, 
    text="üîí", 
    font=ctk.CTkFont(size=60),
    text_color=COLORS["warning"]
)
lock_icon.pack(pady=(40, 20))

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
label = ctk.CTkLabel(
    content_frame, 
    text="–°–ò–°–¢–ï–ú–ê –ó–ê–ë–õ–û–ö–û–í–ê–ù–ê", 
    font=ctk.CTkFont(size=42, weight="bold"), 
    text_color=COLORS["text_primary"]
)
label.pack(pady=(0, 10))

# –ü—ñ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
subtitle = ctk.CTkLabel(
    content_frame, 
    text="–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É", 
    font=ctk.CTkFont(size=22), 
    text_color=COLORS["text_secondary"]
)
subtitle.pack(pady=(0, 30))

# –ü–æ–ª–µ –¥–ª—è –ø–∞—Ä–æ–ª—è –∑ —Å—É—á–∞—Å–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º
entry = ctk.CTkEntry(
    content_frame, 
    placeholder_text="–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å...", 
    show="*", 
    font=ctk.CTkFont(size=24), 
    width=400,
    height=50,
    corner_radius=15,
    border_width=2,
    border_color=COLORS["bg_tertiary"],
    fg_color=COLORS["bg_tertiary"],
    text_color=COLORS["text_primary"],
    placeholder_text_color=COLORS["text_secondary"]
)
entry.pack(pady=15)

# –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏
error_label = ctk.CTkLabel(
    content_frame, 
    text="", 
    text_color=COLORS["error"], 
    font=ctk.CTkFont(size=18, weight="bold")
)
error_label.pack(pady=(10, 0))

# –Ü—Å—Ç–æ—Ä—ñ—è —Å–ø—Ä–æ–±
attempts_label = ctk.CTkLabel(
    content_frame, 
    text="", 
    text_color=COLORS["text_secondary"], 
    font=ctk.CTkFont(size=16)
)
attempts_label.pack(pady=(5, 20))

# –£–º–æ–≤–∏ (—Ç–µ—Å—Ç–æ–≤–∞ –≤–µ—Ä—Å—ñ—è)
conditions = (
    "üéØ –¢–µ—Å—Ç–æ–≤–∏–π —Ä–µ–∂–∏–º –ø—Ä–æ–≥—Ä–∞–º–∏\n"
    "–ü–∞—Ä–æ–ª—ñ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:\n"
    "‚Ä¢ 14707 - –æ—Å–Ω–æ–≤–Ω–∏–π –ø–∞—Ä–æ–ª—å\n"
    "‚Ä¢ unlockmepls - —Ä–µ–∑–µ—Ä–≤–Ω–∏–π –ø–∞—Ä–æ–ª—å\n\n"
    "–í–∞—Ä—ñ–∞–Ω—Ç–∏ —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è:\n"
    "1. –û–ø–ª–∞—Ç–∞ 250 –≥—Ä–∏–≤–µ–Ω—å –Ω–∞ –±–∞–Ω–∫—ñ–≤—Å—å–∫—É –∫–∞—Ä—Ç—É.\n"
    "2. –í—ñ–¥–µ–æ, –¥–µ –≤–∏ —Å—Ç–æ—ó—Ç–µ –Ω–∞ –∫–æ–ª—ñ–Ω–∞—Ö —ñ –∫–∞–∂–µ—Ç–µ:\n"
    "\"–Ø, –Ü–º'—è, –ø—Ä–∏—Å—è–≥–∞—é—Å—å –±—ñ–ª—å—à–µ –Ω—ñ–∫–æ–ª–∏ –Ω–µ —Å—É–ø–µ—Ä–µ—á–∏—Ç–∏ –∑—ñ —Å–≤–æ—ó–º –∫–æ—Ä–æ–ª–µ–º, "
    "—ñ –ø—Ä–∏—Å—è–≥–∞—é—Å—å –Ω–∞–∑–∏–≤–∞—Ç–∏ –π–æ–≥–æ '–ú—ñ–π –•–∞–∑—è—ó–Ω'. –ü—Ä–æ—à—É —Ä–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏ –º—ñ–π –∫–æ–º–ø'—é—Ç–µ—Ä.\""
)

conditions_label = ctk.CTkLabel(
    content_frame, 
    text=conditions, 
    wraplength=500, 
    font=ctk.CTkFont(size=14), 
    text_color=COLORS["text_secondary"], 
    justify="left"
)
conditions_label.pack(pady=(20, 15))

# –ó–∞–≥–∞–¥–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–∞

# –ê–Ω—ñ–º–∞—Ü—ñ—è –ø–æ–º–∏–ª–∫–∏ (–∑–∞–º—ñ—Å—Ç—å —Ç—Ä—è—Å–∫–∏)
def show_error_animation():
    # –ü–ª–∞–≤–Ω–∞ –∞–Ω—ñ–º–∞—Ü—ñ—è –∑–º—ñ–Ω–∏ –∫–æ–ª—å–æ—Ä—É –¥–ª—è –ø–æ–∫–∞–∑—É –ø–æ–º–∏–ª–∫–∏
    original_color = error_label.cget("text_color")
    
    # –ê–Ω—ñ–º–∞—Ü—ñ—è –º–æ—Ä–≥–∞–Ω–Ω—è
    for i in range(4):
        error_label.configure(text_color=COLORS["error"])
        entry.configure(border_color=COLORS["error"])
        root.update()
        time.sleep(0.15)
        error_label.configure(text_color="#ff8888")
        entry.configure(border_color="#ff8888")
        root.update()
        time.sleep(0.15)
    
    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ –∫–æ–ª—å–æ—Ä–∏
    error_label.configure(text_color=original_color)
    entry.configure(border_color=COLORS["bg_tertiary"])
    entry.delete(0, 'end')  # –û—á–∏—â–∞—î–º–æ –ø–æ–ª–µ –≤–≤–æ–¥—É

# –†–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è
def unlock():
    user_input = entry.get()
    attempts_label.configure(text="–°–ø—Ä–æ–±–∞: " + user_input)  # –í–∏–≤–æ–¥–∏–º–æ, —â–æ –≤–≤—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á

    if user_input == PASSWORD:
        messagebox.showinfo("–£—Å–ø—ñ—Ö", "–°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–∞!")
        root.destroy()
    elif user_input == BACKUP_PASSWORD:
        messagebox.showinfo("–£—Å–ø—ñ—Ö", "–°–∏—Å—Ç–µ–º–∞ —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ —Ä–µ–∑–µ—Ä–≤–Ω–∏–π –ø–∞—Ä–æ–ª—å!")
        root.destroy()
    else:
        error_label.configure(text="–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å!")
        show_error_animation()

# –ö–Ω–æ–ø–∫–∞ —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑ —Å—É—á–∞—Å–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º
btn = ctk.CTkButton(
    content_frame, 
    text="üîì –†–û–ó–ë–õ–û–ö–£–í–ê–¢–ò", 
    command=unlock, 
    font=ctk.CTkFont(size=24, weight="bold"), 
    width=300, 
    height=60, 
    corner_radius=15,
    fg_color=COLORS["accent"],
    hover_color=COLORS["accent_hover"],
    text_color=COLORS["text_primary"],
    border_width=0
)
btn.pack(pady=30)

# –ü—Ä–∏–≤'—è–∑–∫–∞ –∫–ª–∞–≤—ñ—à—ñ Enter –¥–æ –∫–Ω–æ–ø–∫–∏ —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è
def on_enter(event):
    unlock()

entry.bind('<Return>', on_enter)
entry.focus()  # –ê–≤—Ç–æ—Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥—É

if __name__ == "__main__":
    print("üîí –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ—ó –ø—Ä–æ–≥—Ä–∞–º–∏...")
    print("üìù –î–æ—Å—Ç—É–ø–Ω—ñ –ø–∞—Ä–æ–ª—ñ:")
    print("   - 14707 (–æ—Å–Ω–æ–≤–Ω–∏–π)")
    print("   - unlockmepls (—Ä–µ–∑–µ—Ä–≤–Ω–∏–π)")
    root.mainloop()